h2. YUI-Caja

This projects contains files related to the effort to cajole YUI.

* <a href="http://developer.yahoo.com/yui/">YUI</a>: The YUI Library is a set of utilities and controls, written in JavaScript, for building richly interactive web applications using techniques such as DOM scripting, DHTML and AJAX.

* <a href="http://code.google.com/p/google-caja/">Caja</a>: A source-to-source translator for securing Javascript-based web content

This project requires the full source tree for YUI2 and Caja, both publically available.

Note: as of Caja revision 3513, the YUI tests no longer work against the truck of the source tree.  The latest revision known to work is 3496.  The quick start notes reflect this.  This will be changed once the trunk works again.

Quick start:

<notextile>
<pre>
[~] ➔ mkdir src; cd src
[~/src] ➔ svn checkout http://google-caja.googlecode.com/svn/trunk/ google-caja -r 3496
[~/src] ➔ git clone git://github.com/yui/yui2.git
[~/src] ➔ git clone git://github.com/apm/yui-caja.git
[~/src] ➔ cd google-caja
[~/src/google-caja] ➔ ant testbed
[~/src/google-caja] ➔ cd ../yui-caja
[~/src/yui-caja] ➔ ant
[~/src/yui-caja] ➔ open tests/core_host.html (open with a web browser, this may need to be served through a local web server)
</pre>
</notextile>

In addition to the adhoc tests provided in the tests directory, we are also in the process of converting the YUI test suite to run under Caja.  These tests are provided in the yuitests directory.

A modified version of YUI Test is included in the distribution to run the tests included in the yuitests directory.  This directory contains a single host file that uses php to make it possible to run all of the tests from the single host file.  This page takes a single parameter to indicate which test you wish to run:

http://localhost/src/yui-caja/yuitests/yuitest_host.php?test=dom

If you don't have a php enabled web server available, it would be simple to create a static html file for the test you wish to run from the php file.

p. Todo:

* Replace the script execs with the cajole task should it exist, or create one.
* Host file build step that generates the correct urls to the caja environment based on the caja.base property.
* Cajole each piece of the utilities stack individually, or concatenate the utilities stack in the build so locally built components can be picked up.
* Document capabilities and known issues for each component.
